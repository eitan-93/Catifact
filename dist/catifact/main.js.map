{"version":3,"sources":["./src/app/components/navigation-bar/navigation-bar.component.ts","./src/app/components/navigation-bar/navigation-bar.component.html","./src/environments/environment.ts","./src/app/fact-fetch-service.ts","./src/app/components/user-dialog/user-dialog.component.ts","./src/app/components/user-dialog/user-dialog.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/my-facts/my-facts.component.ts","./src/app/components/my-facts/my-facts.component.html","./src/app/app.module.ts","./src/app/components/card/card.component.ts","./src/app/components/card/card.component.html","./src/app/components/facts/facts.component.html","./src/app/components/facts/facts.component.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navigation-bar',\n  templateUrl: './navigation-bar.component.html',\n  styleUrls: ['./navigation-bar.component.css']\n})\nexport class NavigationBarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"div_container\" display=\"inline-block\">\n\n    <nav class=\"navigationWrapper\">\n            <div class=\"logoWrapper\">\n              <span class=\"stylish\">Catifact</span>\n              <span class=\"logo\">😺</span>\n            </div>\n            <ul class=\"navigation\">\n              <li class=\"parent\"><a class=\"link\" href=\"facts\">All Facts</a></li>\n              <li class=\"parent\"><a class=\"link\" href=\"my-facts\">My Facts</a></li>\n\n              \n            </ul>\n          </nav>\n\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http'\nimport { Observable, of, throwError } from 'rxjs';\nimport { catchError, flatMap, retry, map} from 'rxjs/operators';\n@Injectable({\n  providedIn: 'root'\n})\nexport class FactFetchService {\n\n\n  fetchFacts() : Observable<Object>{\n    let urltmp = \"https://cat-fact.herokuapp.com/facts/random?animal_type=cat&amount=100\"\n    return this.http.get('/get-facts',{ params:{ url : urltmp}, responseType: 'json'})\n  }\n  // \"https://api.thecatapi.com/v1/images/search?limiti=100&api_key=6a2a6157-5b70-41dd-bbe3-8dd95cf386a9&\"\n  fetchCatImage () : Observable<Object>{\n    let urltmp = \"https://api.thecatapi.com/v1/images/search?limit=100\"\n    return this.http.get('/get-img',{ params:{ url : urltmp}, responseType: 'json'})\n  }\n  \n  saveFactToJSON (fact,uid) : Observable<Object>{\n    \n    return this.http.post('/save-fact',{ params:{ fact : fact, uid : uid}, responseType: 'json'})\n  }\n\n  removeFactFromJSON (factid,uid) : Observable<Object>{\n    \n    return this.http.post('/remove-fact',{ params:{ factid : factid, uid : uid}, responseType: 'json'})\n  }\n\n  getFactsFromJSON (uid) : Observable<Object>{\n    \n    return this.http.post('/get-local-facts',{ params:{ uid : uid}, responseType: 'json'})\n  }\n  // saveWish (movie) : Observable<Object>{\n  //   return this.http.get('/set-wish',{ params:{ Movie : movie}, responseType: 'json'})\n  // }\n  \n  // getWishes () : Observable<Object>{\n  //   return this.http.get('/get-wishes',{ responseType: 'json'})\n  // }\n\n  constructor(private http :HttpClient) { }\n}\n","import { Component, OnInit, Inject } from '@angular/core';\nimport {MatDialog,MatDialogModule, MatDialogConfig } from '@angular/material/dialog';\nimport { MatDialogRef } from \"@angular/material/dialog\";\n\nimport {\n  MAT_DIALOG_DATA\n} from \"@angular/material/dialog\";\n\n@Component({\n  selector: 'app-user-dialog',\n  templateUrl: './user-dialog.component.html',\n  styleUrls: ['./user-dialog.component.css']\n})\nexport class UserDialogComponent implements OnInit {\n\n  constructor(public dialogRef: MatDialogRef<UserDialogComponent>,@Inject(MAT_DIALOG_DATA) public data: any) { }\n\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1 mat-dialog-title>Hi {{data.name}}</h1>\n<div mat-dialog-content>\n  <p>{{data.text}}</p>  \n  <p>Please Enter Your Username :</p>\n  <mat-form-field >\n    <mat-label></mat-label>\n    <input matInput [(ngModel)]=\"data.uid\" >\n  </mat-form-field>\n</div>\n<div mat-dialog-actions>\n  <button mat-button (click)=\"onNoClick()\">No Thanks</button>\n  <button mat-button [mat-dialog-close]=\"data.uid\" margin-left=\"5%\" cdkFocusInitial >Ok</button>\n</div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'catifact';\n}\n","\n<html>\n<app-navigation-bar></app-navigation-bar>\n\n    <div class=\"back\">\n    <br>\n    <br>\n    <br>\n    <router-outlet></router-outlet>\n</div>\n</html>\n","import { Component, OnInit } from '@angular/core';\nimport { FactFetchService } from 'src/app/fact-fetch-service';\nimport {  MatDialog } from '@angular/material/dialog';\nimport { UserDialogComponent } from '../user-dialog/user-dialog.component';\n\n@Component({\n  selector: 'app-my-facts',\n  templateUrl: './my-facts.component.html',\n  styleUrls: ['./my-facts.component.css']\n})\n\n\n\nexport class MyFactsComponent implements OnInit {\n\n  searchText='';\n  factlist=[]\n  CatImageUrls = []\n  uid=''\n\n  openDialog(): void {\n    const dialogRef = this.dialog.open(UserDialogComponent, {\n      width: '270px',\n      data: { name: this.uid, text: \"To Login,\"}\n    });\n  \n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n      this.uid = result;\n      \n      this.getFactList()\n    });\n  }\n\n  getImages() {\n    this.factfetchservice.fetchCatImage()\n      .subscribe((results: any[] ) => {this.CatImageUrls = results; console.log(results); });\n  }\n  \n  getFactList(){\n    this.factfetchservice.getFactsFromJSON(this.uid)\n      .subscribe((results: any ) => {\n        var res = []\n        for (var key in results) {     \n              res.push(results[key]);\n          }  \n        this.factlist = (results === undefined) ? [] : res;\n        console.log(results); });\n  }\n\n\n  constructor(private dialog: MatDialog,private factfetchservice: FactFetchService) { }\n\n  ngOnInit(): void {\n    this.openDialog()\n  }\n\n}\n","\n<div class=\"back\">\n<div align-self=\"text-center\" class=\"container text-center\">\n        <div color=\"grey\"  class=\"row\"> \n            <div class=\"container\">\n                \n                <input class=\"form-control\" type=\"text\" name=\"search\" [(ngModel)]=\"searchText\" (keyup)=\"getFactList()\" autocomplete=\"off\" placeholder=\" 🔍 What The Cat...Would you like to know?\">\n            </div>\n        </div>\n    </div>\n    <span layout=\"row\"><hr flex/></span>\n    <span layout=\"row\" *ngIf=\"factlist.length === 0\" padding-left=\"5%\">No Results Found for : {{uid}}</span>\n    <div class=\"font-color\" >\n        \n            <mat-grid-list cols=\"6\" rowHeight=\"250px\" gutterSize=\"50\" >\n                    <mat-grid-tile\n                        *ngFor=\"let fact of factlist | filter:searchText\"\n                        [style.background]=\"transparent\"\n                        [colspan]=\"3\"\n                        [rowspan]=\"1\">\n                        \n                        <app-card [CatFact]=\"fact\" [toggle]=\"true\"  [myuid]=\"uid\" [myfact]=\"true\"></app-card>\n                    </mat-grid-tile>\n            </mat-grid-list>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { FactsComponent } from './components/facts/facts.component';\nimport { MyFactsComponent } from './components/my-facts/my-facts.component';\nimport { NavigationBarComponent } from './components/navigation-bar/navigation-bar.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\n\nimport { MatCarouselModule } from '@ngmodule/material-carousel';\nimport { MatGridListModule} from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatDialogModule } from '@angular/material/dialog';\n \n\nimport { CardComponent } from './components/card/card.component';\nimport { UserDialogComponent } from './components/user-dialog/user-dialog.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    FactsComponent,\n    MyFactsComponent,\n    NavigationBarComponent,\n    CardComponent,\n    UserDialogComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatCarouselModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatCardModule,\n    HttpClientModule,\n    MatIconModule,\n    MatGridListModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatDialogModule, \n    Ng2SearchPipeModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Input } from '@angular/core';\nimport { FactFetchService } from 'src/app/fact-fetch-service';\n\nimport {MatDialog } from '@angular/material/dialog';\n\nimport { UserDialogComponent } from '../user-dialog/user-dialog.component';\n\n@Component({\n  selector: 'app-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.css']\n})\nexport class CardComponent implements OnInit {\n  //https://api.thecatapi.com/v1/images/search\n\n\n  @Input() CatFact: any;\n  // @Input() CatImageUrl: any;\n  @Input() toggle: boolean;\n  @Input() myuid: string;\n  @Input() myfact: boolean;\n\n  toggleLike  \n  uid=''\n  // CatImage\n\nopenDialog(): void {\n  const dialogRef = this.dialog.open(UserDialogComponent, {\n    width: '270px',\n    data: { name: this.uid, text : \"To Save a Fact,\"}\n  });\n\n  dialogRef.afterClosed().subscribe(\n    result => {console.log('The dialog was closed');\n                this.uid = result;\n                this.saveFact(this.CatFact,this.uid);\n                },\n    error => { console.log(error)},\n    ()=>{} \n    \n  )\n}\n\nsaveFact(CatFact,uid){\n  this.factfetchservice.saveFactToJSON(CatFact,uid)\n  .subscribe((results: any ) => {console.log(results); });\n}\n\nremoveFact(CatFactid,uid){\n  this.factfetchservice.removeFactFromJSON(CatFactid,uid)\n  .subscribe((results: any ) => {console.log(results); });\n}\n\n\nenableDisableRule() {\n  this.toggleLike = !this.toggleLike;\n  this.toggleLike ? (!this.myfact ? this.openDialog(): this.saveFact(this.CatFact,this.uid)) : this.removeFact(this.CatFact._id,this.uid); \n\n}\n\n  constructor(private dialog: MatDialog,private factfetchservice: FactFetchService) { }\n\n  ngOnInit(): void {\n    this.toggleLike = this.toggle;\n    this.uid=this.myuid;\n  }\n\n}\n","<mat-card class=\"card\" *ngIf=\"!(myfact && !toggleLike) \" >\n<div     >\n        <!-- <img class=\"md-avatar\" style=\"border-radius: 50%; border: 1px solid black;height:200px!important;width:auto!important;\" [src]=\"CatImageUrl.url\" /> -->\n        <!-- <img mat-card-image [src]=\"CatImageUrl.url\"> -->\n        <mat-card-content >\n          <div class=\"font-color\">\n              <p>\n            {{CatFact.text}}\n        </p>\n          </div>\n        </mat-card-content>\n</div>\n\n\n<mat-card-actions>\n        <button mat-icon-button \n              \n            class=\"grey\"\n            background-color=\"transparent\"\n            background=\"none\"\n            (click)=\"enableDisableRule()\"\n            [ngClass]=\"toggleLike ? 'blue' : 'grey' \" >\n        \n                    <mat-icon font-size=\"50px\" >favorite</mat-icon>\n        </button>\n        <!-- <mat-icon>favorite</mat-icon></button> -->\n    </mat-card-actions>   \n\n        <!-- <mat-card-actions>\n          <button mat-button>LIKE</button>\n        </mat-card-actions> -->\n</mat-card>","\n<h1>Let's Learn About Cats !</h1>\n<div class=\"items\" >\n  <mat-carousel\n    timings=\"250ms ease-in\"\n    [autoplay]=\"true\"\n    interval=\"5000\"\n    color=\"blue\"\n    maxWidth=\"50%\"\n    proportion=\"40\"\n    slides=\"100\"\n    [loop]=\"true\"\n    [hideArrows]=\"true\"\n    [hideIndicators]=\"true\"\n    [useKeyboard]=\"true\"\n    [useMouseWheel]=\"false\"\n    orientation=\"ltr\"\n  >\n    \n  <mat-carousel-slide\n  maxWidth=\"100%\"\n  maxheight=\"50px\"\n      #matCarouselSlide\n      *ngFor=\"let img of CatImageUrls; let i = index\"\n      [image]=\"img.url\"\n      overlayColor=\"rgb(202, 205, 230)\"\n      [hideOverlay]=\"true\"\n      slidewidth=\"50%\"\n    >\n\n  </mat-carousel-slide>\n\n  </mat-carousel>\n</div>\n\n<div class=\"items2\" >\n<mat-carousel\n  timings=\"250ms ease-in\"\n  [autoplay]=\"false\"\n  interval=\"5000\"\n  color=\"blue\"\n  maxWidth=\"75%\"\n  maxheight=\"50px\"\n  portions=\"40\"\n  slides=\"100\"\n  [loop]=\"true\"\n  [hideArrows]=\"false\"\n  [hideIndicators]=\"true\"\n  [useKeyboard]=\"true\"\n  [useMouseWheel]=\"false\"\n  orientation=\"ltr\"\n>\n  \n<mat-carousel-slide\n    #matCarouselSlide\n    slideheight=\"50%\"\n    *ngFor=\"let fact of CatFacts;let img of CatImageUrls; let j = index\"\n    overlayColor=\"rgb(202, 205, 230)\"\n    [hideOverlay]=\"true\"\n    \n  >\n\n  <div style=\"width: 100%; height: 100%; display: flex; flex-direction: row; align-items: center; justify-content: center\">\n                    <app-card [CatFact]=\"fact\" [toggle]=\"false\" [myfact]=\"false\"></app-card>\n  </div>\n\n  </mat-carousel-slide>\n</mat-carousel>\n</div>\n\n\n","import { Component, OnInit } from '@angular/core';\n\nimport { MatCarousel, MatCarouselComponent } from '@ngmodule/material-carousel';\nimport { FactFetchService } from 'src/app/fact-fetch-service';\n\n@Component({\n  selector: 'app-facts',\n  templateUrl: './facts.component.html',\n  styleUrls: ['./facts.component.css']\n})\nexport class FactsComponent implements OnInit {\n\n  constructor(private factfetchservice: FactFetchService) { }\n\n  CatImageUrls = []\n  CatFacts = []\n\n  getImages() {\n    this.factfetchservice.fetchCatImage()\n      .subscribe((results: any[] ) => {this.CatImageUrls = results; console.log(results); });\n  }\n  download() {\n\n    this.factfetchservice.fetchFacts()\n      .subscribe((results: any[] ) => {this.CatFacts = (results === undefined) ? [] : results;  \n                                                  console.log(results); });\n  }\n\n\n\n  ngOnInit() {\n    // this.slides = this.chunk(this.cards, 3);\n    this.download() \n    this.getImages()\n  }\n\n  // slides = []\n\n  // chunk(arr, chunkSize) {\n  //   let res = [];\n  //   for (let i = 0, len = arr.length; i < len; i += chunkSize) {\n  //     res.push(arr.slice(i, i + chunkSize));\n  //   }\n  //   return res;\n  // }\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { FactsComponent } from './components/facts/facts.component';\nimport { MyFactsComponent } from './components/my-facts/my-facts.component';\n\nconst routes: Routes = [\n  {path: '', component: FactsComponent},\n  {path: 'facts', component: FactsComponent},\n  {path: 'my-facts', component: MyFactsComponent},];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}